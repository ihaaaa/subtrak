Build a full-stack JavaScript web app called “SUBTRACK”.

⚙️  TECH CHOICES  
• Front-end: React + Vite + Tailwind CSS (dark mode).  
• Back-end: Node.js 18, Express.  
• Database: MongoDB (use Replit DB if Atlas isn’t available; expose helper module so I can swap later).  
• State: React Context for auth + subscriptions.  
• Icons: Heroicons outline set.  
• Font: Inter, weight 400 / 600.

🖥  LAYOUT & PAGES  
1. “/” redirects to “/dashboard” if logged in, else “/login”.  
2. **Dashboard** page matches this hierarchy:  
   ┌ Sidebar 250 px ─ logo + nav (Dashboard, Subscriptions, Analytics, AI Insights, Settings).  
   ├ Header bar with text “Welcome back, {{firstName}}” and profile dropdown.  
   ├ Spending overview cards (flex row):  
        – Total Monthly Cost – show ₹2,847  
        – This Month’s Savings – show green ₹640  
        – Active Subscriptions – show 12  
   ├ Two-column grid (lg:grid-cols-3):  
        • Left 2-cols – table <Your Subscriptions> with mock rows for Netflix, Amazon Prime, Spotify, Zomato Pro, Disney+ Hotstar (fields: logo, name, cost, next billing date, status dot).  
        • Right 1-col – panel <AI Recommendations> with two static list items:  
            – “Cancel Hotstar – unused 45 days”  
            – “Switch to annual plan – save ₹300” (include tiny ✨ emoji as sparkle).  
3. **Subscriptions page**: CRUD list with Add / Edit / Delete modals.  
4. **AI Insights page**: placeholder text “Coming Soon: GPT-powered insights”.  
5. **Auth pages**: Sign-up, Login, Password reset using Replit Auth.

🎨  STYLE TOKENS  
Root bg  #0F172A  
Card bg1 #1E293B  
Card bg2 #334155  
Accent-blue #3B82F3  
Success-green #10B981  
Error-red   #EF4444  
Border-radius 12 px; shadow-md.  Hover: shadow-lg + slight translate-y-1, transition-200.

💾  DATA MODELS (Mongo)  
User  { _id, name, email, passwordHash }  
Subscription { _id, userId, name, cost, currency, billingDate, frequency, category, usageRating, status }  

Seed DB with one demo user (email demo@subtrack.app / pw Demo123) and 5 sample subscriptions as above.

🤖  AI HOOK  
Create a `aiClient.js` stub that exports `getRecommendations(userId)` returning the two mock recommendations above.  Include TODO comment to plug OpenAI later.

🚀  RUN & PREVIEW  
• Add an npm script “dev” that concurrently runs front-end (port 5173) and API (port 5000).  
• Show live preview of the React app.  

📜  README.md  
Auto-generate a brief README explaining setup (`npm install && npm run dev`), environment variables (`MONGO_URI`, `JWT_SECRET`), and how to swap the AI stub with an OpenAI key.

